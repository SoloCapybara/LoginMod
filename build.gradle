plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

version = mod_version
group = mod_group_id

base {
    archivesName = "${mod_id}-${minecraft_version}"
}

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    // The mappings can be changed at any time and must be in the following format.
    // Channel:   Version:
    // official   MCVersion             Official field/method names from Mojang mapping files
    // parchment  YYYY.MM.DD-MCVersion  Open community-sourced parameter names and javadocs layered on top of official
    //
    // You must be aware of the Mojang license when using the 'official' or 'parchment' mappings.
    // See more information here: https://github.com/MinecraftForge/MCPConfig/blob/master/Mojang.md
    //
    // Parchment is an unofficial project maintained by ParchmentMC, separate from MinecraftForge
    // Additional setup is needed to use their mappings: https://parchmentmc.org/docs/getting-started
    //
    // Use non-default mappings at your own risk. They may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: mapping_channel, version: mapping_version

    // When true, this property will have all Eclipse/IntelliJ IDEA run configurations run the "prepareX" task for the given run configuration before launching the game.
    // In most cases, it is not necessary to enable.
    // enableEclipsePrepareRuns = true
    // enableIdeaPrepareRuns = true

    // This property allows configuring Gradle's ProcessResources task(s) to run on IDE output locations before launching the game.
    // It is REQUIRED to be set to true for this template to function.
    // See https://docs.gradle.org/current/dsl/org.gradle.language.jvm.tasks.ProcessResources.html
    copyIdeResources = true

    // When true, this property will add the folder name of all declared run configurations to generated IDE run configurations.
    // The folder name can be set on a run configuration using the "folderName" property.
    // By default, the folder name of a run configuration is the name of the Gradle project containing it.
    // generateRunFolders = true

    // This property enables access transformers for use in development.
    // They will be applied to the Minecraft artifact.
    // The access transformer file can be anywhere in the project.
    // However, it must be at "META-INF/accesstransformer.cfg" in the final mod jar to be loaded by Forge.
    // This default location is a best practice to automatically put the file in the right place in the final jar.
    // See https://docs.minecraftforge.net/en/latest/advanced/accesstransformers/ for more information.
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        // applies to all the run configs below
        configureEach {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be added/remove as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
        }

        // This run config launches GameTestServer and runs all registered gametests, then exits.
        // By default, the server will crash when no gametests are provided.
        // The gametest system is also enabled by default for other run configs under the /test command.
        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            // example of overriding the workingDirectory set in configureEach above
            workingDirectory project.file('run-data')

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    // Put repositories for dependencies here
    // ForgeGradle automatically adds the Forge maven and Maven Central for you

    // If you have mod jar dependencies in ./libs, you can declare them as a repository like so.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html#sub:flat_dir_resolver
    // flatDir {
    //     dir 'libs'
    // }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    // MySQL JDBC 驱动依赖
    compileOnly("com.mysql:mysql-connector-j:8.0.33") {
        // 排除 Netty，因为它与Minecraft/Forge自带的冲突
        exclude group: "io.netty"
        // 排除 Guava
        exclude group: "com.google.guava"
    }

    // 在运行时显式包含依赖，以便打包到最终JAR中
    runtimeOnly("com.mysql:mysql-connector-j:8.0.33") {
        // 排除 Log4j SLF4j 的传递性依赖
        exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j2-impl'
        // 移除更具体的 Log4j 2 排除，依赖 shadowJar 处理
        // exclude group: 'org.apache.logging.log4j', module: 'log4j-api'
        // exclude group: 'org.apache.logging.log4j', module: 'log4j-core'
        // 排除 Netty 的传递性依赖
        exclude group: "io.netty"
        // 排除 Guava 的传递性依赖
        exclude group: "com.google.guava"
    }

    // Example mod dependency with JEI - using fg.deobf() ensures the dependency is remapped to your development mappings
    // The JEI API is declared for compile time use, while the full JEI artifact is used at runtime
    // compileOnly fg.deobf("mezz.jei:jei-${mc_version}-common-api:${jei_version}")
    // compileOnly fg.deobf("mezz.jei:jei-${mc_version}-forge-api:${jei_version}")
    // runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}")

    // Example mod dependency using a mod jar from ./libs with a flat dir repository
    // This maps to ./libs/coolmod-${mc_version}-${coolmod_version}.jar
    // The group id is ignored when searching -- in this case, it is "blank"
    // implementation fg.deobf("blank:coolmod-${mc_version}:${coolmod_version}")

    // For more info:
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
}

// This block of code expands all declared replace properties in the specified resource targets.
// A missing property will result in an error. Properties are expanded using ${} Groovy notation.
// When "copyIdeResources" is enabled, this will also run before the game launches in IDE environments.
// See https://docs.gradle.org/current/dsl/org.gradle.language.jvm.tasks.ProcessResources.html
tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

// Example for how to get properties into the manifest for reading at runtime.
tasks.named('jar', Jar).configure {
    // 确保 jar 任务是启用的
    enabled = true

    manifest {
        attributes([
                'Specification-Title'     : mod_id,
                'Specification-Vendor'    : mod_authors,
                'Specification-Version'   : '1',
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_authors,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    // 打包模组类文件和资源
    from sourceSets.main.output

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    // 确保 reobfJar 在 jar 之后运行
    // finalizedBy 'reobfJar'
}

// Example configuration to allow publishing using the maven-publish plugin
publishing {
    publications {
        register('mavenJava', MavenPublication) {
            artifact shadowJar // 发布 shadowJar 的输出
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // 确保使用 UTF-8 编码编译 Java 源文件
    options.release = 17 // 明确指定 Java 17 版本
}

// 将 shadowJar 的大部分配置移入 afterEvaluate 块
project.afterEvaluate {
    tasks.named('shadowJar').configure {
        enabled = false // Temporarily disable shadowJar
        // Set the output jar name
        archiveClassifier = '' // 移除默认的 '-all' 后缀
        archiveBaseName = "${mod_id}-${minecraft_version}" // 设置基础文件名
        archiveVersion = "" // 移除版本号，由 base { archivesName } 处理
        
        // 明确声明 shadowJar 依赖于 reobfJar 任务
        dependsOn tasks.named('reobfJar')
        
        // Using reobfJar output as input
        // from tasks.named('reobfJar')

        // Explicitly include mod classes and runtime classpath
        from sourceSets.main.output
        from project.configurations.runtimeClasspath

        // 重定位冲突的包 (如果需要)
        // relocate 'io.netty', 'shaded.io.netty' // 如果 Netty 冲突再次出现且排除无效，可以启用此行

        // 排除其他已知冲突包
        // exclude 'META-INF/*.RSA'
        // exclude 'META-INF/*.SF'
        // exclude 'META-INF/*.DSA'
        // exclude 'META-INF/MANIFEST.MF'
        // exclude 'META-INF/versions/9/module-info.class'
        // exclude 'module-info.class'
        // exclude 'net/minecraftforge/jarjar/**' // Forge JarJar 工具
        // exclude 'org/objectweb/asm/**' // ASM
        // exclude 'joptsample/**' // joptsimple
        // exclude 'net/jodah.typetools/**' // typetools (注意这里的点)
        // exclude 'com/sun/jna/**' // JNA
        // exclude 'com/sun/jna/win32/**' // JNA Win32
        // exclude 'com/mojang/logging/**' // Mojang logging
        // exclude 'org/apache/commons/io/**' // Apache Commons IO
        // exclude 'com/mojang/datafixers/**' // Mojang DataFixerUpper
        // exclude 'com/mojang/serialization/**' // Mojang serialization
        // exclude 'io/netty/**' // Netty
        // exclude 'io/netty/util/internal/**' // 排除 io.netty.util.internal
        // exclude 'it/unimi.dsi.fastutil/**' // FastUtil
        // exclude 'org/apache/logging/log4j/**' // Log4j 2
        // exclude 'org/apache/logging/log4j/util/**' // Log4j 2 util 包具体排除
        // exclude 'org/jline/**' // JLine
        // exclude 'com/google/common/**' // Guava

        // 如果 MySQL 驱动本身包含冲突包，这里会排除它们

        // 确保不重定位或排除模组自身的类
        // include 'com/your_mod_id/**' // 根据你的实际包名调整

        // Ensure MySQL driver is included
        include 'com/mysql/**'
    }
}
